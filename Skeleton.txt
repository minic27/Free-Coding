import tkinter as tk

from tkinter import ttk
from tkinter import *

import trial

#creating the window
root= tk.Tk()
root.resizable(FALSE, FALSE)
#background color 
root.configure(bg='#19213d')
root.title('FREE CODING')

#Frame Top
#top frame
frame_top=Frame(root,width=1550,height=90, background='#37aed0')
frame_top.grid(row=0, column=0, columnspan=2)

#run
photo_imageLexical=PhotoImage(file='runf.png')

#left
photo_logo=PhotoImage(file='upper_frame.png')

#Logo
canvasLogo=Canvas(frame_top, width=1000, height=350)
canvasLogo.create_image(503.5, 0, image=photo_logo, anchor=N)
canvasLogo.place(x=275,y=5)

#Frame 1 Top left size
frame1=Frame(root, width=633, height=400)
frame1.grid(row=2, column=0,padx=1, pady=1)
frame1.config(bg="white")

#Frame 1 Style
style=ttk.Style(frame1)
style.theme_use('alt')

#Text area
text_area = Text(frame1, bg='#121212', width = 85, height = 25, font = ("Arial",12), insertbackground='white', fg="White")
text_area.pack(side="left")

#TRIAL INPUT AND OUTPUT
def Take_input():
    Output.configure(state='normal')
    Errors.configure(state='normal')
    Output.delete(1.0,END)#How to reset text area
    Errors.delete(1.0,END)#How to reset text area
    INPUT = text_area.get("1.0", "end-1c")
    run_code = trial.run(INPUT)
    for result in run_code:
        if result.callError != "":
            #Frame 2 - Error
            Errors.configure(state='normal')
            Errors.insert(END, '\' ')
            Errors.insert(END, result.tok)
            Errors.insert(END, '\' â†’ ')
            Errors.insert(END, result.callError)
            Errors.insert(END, ' on Line ')
            Errors.insert(END, result.line)
            Errors.insert(END, '\n')
            Output.configure(state='disabled')
            Errors.configure(state='disabled')
        else:
            #Frame 3 - Output
            Output.configure(state='normal')
            Output.insert(END, '  ')
            Output.insert(END, result.tok)
            Output.insert(END, '\t\t\t  ')
            Output.insert(END, result.type)
            Output.insert(END, '\n')
            Output.configure(state='disabled')
            Errors.configure(state='disabled')
        
#Frame 2 - Errors
#gilid
frame2=Frame(root, width=633, height=100)
frame2.grid(row=3, column=0, padx=25, pady=1, ipadx=1, ipady=1)

scrollbar2=ttk.Scrollbar(frame2, orient='vertical')
#width of frame 2
Errors = Text(frame2, width = 63, height =8, font = ("Arial",16), bg = "#121212", fg="White", state='disabled')
Errors.pack(side="left")

#Frame 3 - Output
frame3=Frame(root, width=520, height=600)
frame3.grid(row=1, column=1, rowspan = 6, columnspan = 2, padx=25, pady=(1,10), ipadx=1, ipady=1)

#OUTPUT TEXT AREA
scrollbar3=ttk.Scrollbar(frame3, orient='vertical')
Output = Text(frame3, width = 60, height =37, font = ("Arial",12), bg = "#121212", fg="White", highlightthickness=0, borderwidth=0, state='disabled')
Output.pack(side="left")

Run_Lexical=Button(width=175, height=35, image=photo_imageLexical, border=0, activebackground='#0F0F0F', background='#0F0F0F', command = lambda:Take_input())
Run_Lexical.place(x=25, y=25)

Errors.pack()
Output.pack()
text_area.focus()
root.mainloop()
